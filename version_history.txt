< Version History >

* Ver 2.0(24.07.02)
- HILT 적용 진행
1. by viewModels()로 대체 가능
    private lateinit var localListViewModel: LocalListViewModel
    localListViewModel = ViewModelProvider(this).get(LocalListViewModel::class.java)
    ===>
    private val localListViewModel: LocalListViewModel by viewModels()

2. Inject 사용하는 방법도 fragment와 viewmodel간에 차이가 있음.
    LocalListFragment 에서는
    @Inject
    lateinit var respository: UserItemRespository
            respository.getAllUsers()
    @Inject
    lateinit var sharedPreferences: PreferencesHelper
            sharedPreferences.getUsername()

    LocalListViewModel 에서는 생성자로 사용해야 함.
        class LocalListViewModel @Inject constructor(
            private val respository: UserItemRespository,
            private val sharedPreferences: PreferencesHelper
        ) : ViewModel(){

* Ver 2.0.1(24.07.02)
- HILT 적용 진행
 : sharedPreferences 는 hilt 적용하여 사용하기가 너무 번거로움.
 : MyApplication 에서 PreferencesManager.init(this) 으로 사용

* Ver 2.0.2(24.07.02)
- DiUtil 적용
1. 하기와 같이 사용 가능
class LocalListViewModel @Inject constructor(
    private val respository: UserItemRespository
) : ViewModel(){

2. 하기와 같이 변경 가능
class LocalListViewModel @Inject constructor(
    //private val respository: UserItemRespository
) : ViewModel(){
    private val respository: UserItemRespository = DiUtil.userItemRepository

* Ver 2.0.3(24.07.04)
- 코드 정리

* Ver 2.0.4(24.07.04)
- BaseFragment 선언
 : onViewCreated 에서 직접 함수를 선언하지 않고, abstract 함수만 선언하는 방식으로
 : BaseFragment 에서 선언할 경우, PARENT에서도 선언하면 중복 호출하는 오류가 발생 할수 있으므로